// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package generated

import (
	"database/sql/driver"
	"fmt"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type ProductCurrency string

const (
	ProductCurrencyRub ProductCurrency = "rub"
	ProductCurrencyUsd ProductCurrency = "usd"
	ProductCurrencyEur ProductCurrency = "eur"
)

func (e *ProductCurrency) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ProductCurrency(s)
	case string:
		*e = ProductCurrency(s)
	default:
		return fmt.Errorf("unsupported scan type for ProductCurrency: %T", src)
	}
	return nil
}

type NullProductCurrency struct {
	ProductCurrency ProductCurrency
	Valid           bool // Valid is true if ProductCurrency is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullProductCurrency) Scan(value interface{}) error {
	if value == nil {
		ns.ProductCurrency, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ProductCurrency.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullProductCurrency) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ProductCurrency), nil
}

type Order struct {
	ID             uuid.UUID
	ReadableID     pgtype.Int8
	WebAppID       pgtype.UUID
	ExternalUserID pgtype.Int4
	CreatedAt      pgtype.Timestamp
	UpdatedAt      pgtype.Timestamp
}

type OrderProduct struct {
	OrderID   pgtype.UUID
	ProductID pgtype.UUID
	Quantity  int32
}

type Product struct {
	ID            uuid.UUID
	WebAppID      pgtype.UUID
	Name          string
	Description   pgtype.Text
	Price         float64
	PriceCurrency ProductCurrency
	ImageUrl      pgtype.Text
	Category      pgtype.Text
}

type TelegramUser struct {
	ID           uuid.UUID
	ExternalID   int32
	IsBot        pgtype.Bool
	FirstName    string
	LastName     pgtype.Text
	Username     pgtype.Text
	LanguageCode pgtype.Text
	IsPremium    pgtype.Bool
	AllowsPm     pgtype.Bool
	CreatedAt    pgtype.Timestamp
	UpdatedAt    pgtype.Timestamp
}

type WebApp struct {
	ID                    uuid.UUID
	Name                  string
	OwnerExternalID       pgtype.Int4
	LogoUrl               pgtype.Text
	IsVerified            pgtype.Bool
	ShortName             string
	VerifiedAt            pgtype.Timestamp
	CreatedAt             pgtype.Timestamp
	IsDeleted             pgtype.Bool
	OnlinePaymentsEnabled bool
}
