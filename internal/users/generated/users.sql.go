// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: users.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const authUser = `-- name: AuthUser :exec
insert into telegram_users (external_id,
                            is_bot,
                            first_name,
                            last_name,
                            username,
                            language_code,
                            is_premium,
                            allows_pm)
values ($1, $2, $3, $4, $5, $6, $7, $8)
on conflict (external_id)
do update set first_name = $3,
    last_name = $4,
    username = $5,
    language_code = $6,
    is_premium = $7,
    allows_pm = $8,
    updated_at = now()
`

type AuthUserParams struct {
	ExternalID   int32
	IsBot        pgtype.Bool
	FirstName    string
	LastName     pgtype.Text
	Username     pgtype.Text
	LanguageCode pgtype.Text
	IsPremium    pgtype.Bool
	AllowsPm     pgtype.Bool
}

func (q *Queries) AuthUser(ctx context.Context, arg AuthUserParams) error {
	_, err := q.db.Exec(ctx, authUser,
		arg.ExternalID,
		arg.IsBot,
		arg.FirstName,
		arg.LastName,
		arg.Username,
		arg.LanguageCode,
		arg.IsPremium,
		arg.AllowsPm,
	)
	return err
}
