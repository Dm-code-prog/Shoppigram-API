// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: orders.sql

package generated

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const getOrder = `-- name: GetOrder :one
select o.id, o.updated_at, SUM(p.price*op.quantity)
from orders o
	 join order_products op on op.order_id = o.id
	 join products p on p.id = op.product_id
where o.id = $1
group by o.id
`

type GetOrderRow struct {
	ID        uuid.UUID
	UpdatedAt pgtype.Timestamp
	Sum       int64
}

func (q *Queries) GetOrder(ctx context.Context, id uuid.UUID) (GetOrderRow, error) {
	row := q.db.QueryRow(ctx, getOrder, id)
	var i GetOrderRow
	err := row.Scan(&i.ID, &i.UpdatedAt, &i.Sum)
	return i, err
}
