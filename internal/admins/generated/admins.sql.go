// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: admins.sql

package generated

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const getMarketplaces = `-- name: GetMarketplaces :many
select id, name, logo_url
from web_apps
where owner_external_id = $1
`

type GetMarketplacesRow struct {
	ID      uuid.UUID
	Name    string
	LogoUrl pgtype.Text
}

func (q *Queries) GetMarketplaces(ctx context.Context, ownerExternalID pgtype.Int4) ([]GetMarketplacesRow, error) {
	rows, err := q.db.Query(ctx, getMarketplaces, ownerExternalID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetMarketplacesRow
	for rows.Next() {
		var i GetMarketplacesRow
		if err := rows.Scan(&i.ID, &i.Name, &i.LogoUrl); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
