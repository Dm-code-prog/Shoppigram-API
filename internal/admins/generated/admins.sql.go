// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: admins.sql

package generated

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const getMarketplacesByUserID = `-- name: GetMarketplacesByUserID :many
select id, name
from web_apps
where owner_external_id = $1
`

type GetMarketplacesByUserIDRow struct {
	ID   uuid.UUID
	Name string
}

func (q *Queries) GetMarketplacesByUserID(ctx context.Context, ownerExternalID pgtype.Int4) ([]GetMarketplacesByUserIDRow, error) {
	rows, err := q.db.Query(ctx, getMarketplacesByUserID, ownerExternalID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetMarketplacesByUserIDRow
	for rows.Next() {
		var i GetMarketplacesByUserIDRow
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
