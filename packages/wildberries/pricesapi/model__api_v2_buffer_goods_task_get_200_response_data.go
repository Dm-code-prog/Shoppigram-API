/*
API цен и скидок

С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов раздела **Цены и скидки**.

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricesapi

import (
	"encoding/json"
)

// checks if the ApiV2BufferGoodsTaskGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV2BufferGoodsTaskGet200ResponseData{}

// ApiV2BufferGoodsTaskGet200ResponseData struct for ApiV2BufferGoodsTaskGet200ResponseData
type ApiV2BufferGoodsTaskGet200ResponseData struct {
	// ID загрузки
	UploadID *int32 `json:"uploadID,omitempty"`
	// Информация о товарах в загрузке
	BufferGoods []GoodBufferHistory `json:"bufferGoods,omitempty"`
}

// NewApiV2BufferGoodsTaskGet200ResponseData instantiates a new ApiV2BufferGoodsTaskGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2BufferGoodsTaskGet200ResponseData() *ApiV2BufferGoodsTaskGet200ResponseData {
	this := ApiV2BufferGoodsTaskGet200ResponseData{}
	return &this
}

// NewApiV2BufferGoodsTaskGet200ResponseDataWithDefaults instantiates a new ApiV2BufferGoodsTaskGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2BufferGoodsTaskGet200ResponseDataWithDefaults() *ApiV2BufferGoodsTaskGet200ResponseData {
	this := ApiV2BufferGoodsTaskGet200ResponseData{}
	return &this
}

// GetUploadID returns the UploadID field value if set, zero value otherwise.
func (o *ApiV2BufferGoodsTaskGet200ResponseData) GetUploadID() int32 {
	if o == nil || IsNil(o.UploadID) {
		var ret int32
		return ret
	}
	return *o.UploadID
}

// GetUploadIDOk returns a tuple with the UploadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV2BufferGoodsTaskGet200ResponseData) GetUploadIDOk() (*int32, bool) {
	if o == nil || IsNil(o.UploadID) {
		return nil, false
	}
	return o.UploadID, true
}

// HasUploadID returns a boolean if a field has been set.
func (o *ApiV2BufferGoodsTaskGet200ResponseData) HasUploadID() bool {
	if o != nil && !IsNil(o.UploadID) {
		return true
	}

	return false
}

// SetUploadID gets a reference to the given int32 and assigns it to the UploadID field.
func (o *ApiV2BufferGoodsTaskGet200ResponseData) SetUploadID(v int32) {
	o.UploadID = &v
}

// GetBufferGoods returns the BufferGoods field value if set, zero value otherwise.
func (o *ApiV2BufferGoodsTaskGet200ResponseData) GetBufferGoods() []GoodBufferHistory {
	if o == nil || IsNil(o.BufferGoods) {
		var ret []GoodBufferHistory
		return ret
	}
	return o.BufferGoods
}

// GetBufferGoodsOk returns a tuple with the BufferGoods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV2BufferGoodsTaskGet200ResponseData) GetBufferGoodsOk() ([]GoodBufferHistory, bool) {
	if o == nil || IsNil(o.BufferGoods) {
		return nil, false
	}
	return o.BufferGoods, true
}

// HasBufferGoods returns a boolean if a field has been set.
func (o *ApiV2BufferGoodsTaskGet200ResponseData) HasBufferGoods() bool {
	if o != nil && !IsNil(o.BufferGoods) {
		return true
	}

	return false
}

// SetBufferGoods gets a reference to the given []GoodBufferHistory and assigns it to the BufferGoods field.
func (o *ApiV2BufferGoodsTaskGet200ResponseData) SetBufferGoods(v []GoodBufferHistory) {
	o.BufferGoods = v
}

func (o ApiV2BufferGoodsTaskGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV2BufferGoodsTaskGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UploadID) {
		toSerialize["uploadID"] = o.UploadID
	}
	if !IsNil(o.BufferGoods) {
		toSerialize["bufferGoods"] = o.BufferGoods
	}
	return toSerialize, nil
}

type NullableApiV2BufferGoodsTaskGet200ResponseData struct {
	value *ApiV2BufferGoodsTaskGet200ResponseData
	isSet bool
}

func (v NullableApiV2BufferGoodsTaskGet200ResponseData) Get() *ApiV2BufferGoodsTaskGet200ResponseData {
	return v.value
}

func (v *NullableApiV2BufferGoodsTaskGet200ResponseData) Set(val *ApiV2BufferGoodsTaskGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2BufferGoodsTaskGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2BufferGoodsTaskGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2BufferGoodsTaskGet200ResponseData(val *ApiV2BufferGoodsTaskGet200ResponseData) *NullableApiV2BufferGoodsTaskGet200ResponseData {
	return &NullableApiV2BufferGoodsTaskGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiV2BufferGoodsTaskGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2BufferGoodsTaskGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
