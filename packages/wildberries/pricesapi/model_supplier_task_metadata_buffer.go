/*
API цен и скидок

С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов раздела **Цены и скидки**.

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricesapi

import (
	"encoding/json"
)

// checks if the SupplierTaskMetadataBuffer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupplierTaskMetadataBuffer{}

// SupplierTaskMetadataBuffer struct for SupplierTaskMetadataBuffer
type SupplierTaskMetadataBuffer struct {
	// ID загрузки
	UploadID *int32 `json:"uploadID,omitempty"`
	// Статус загрузки: `1` — в обработке
	Status *int32 `json:"status,omitempty"`
	// Дата и время, когда загрузка создана
	UploadDate *string `json:"uploadDate,omitempty" validate:"regexp=YYYY-MM-DDTHH:MM:SSZ"`
	// Дата и время, когда загрузка отправляется в обработку
	ActivationDate *string `json:"activationDate,omitempty" validate:"regexp=YYYY-MM-DDTHH:MM:SSZ"`
	// Всего товаров
	OverAllGoodsNumber *int32 `json:"overAllGoodsNumber,omitempty"`
	// Товаров без ошибок (0, потому что загрузка в обработке)
	SuccessGoodsNumber *int32 `json:"successGoodsNumber,omitempty"`
}

// NewSupplierTaskMetadataBuffer instantiates a new SupplierTaskMetadataBuffer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplierTaskMetadataBuffer() *SupplierTaskMetadataBuffer {
	this := SupplierTaskMetadataBuffer{}
	return &this
}

// NewSupplierTaskMetadataBufferWithDefaults instantiates a new SupplierTaskMetadataBuffer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplierTaskMetadataBufferWithDefaults() *SupplierTaskMetadataBuffer {
	this := SupplierTaskMetadataBuffer{}
	return &this
}

// GetUploadID returns the UploadID field value if set, zero value otherwise.
func (o *SupplierTaskMetadataBuffer) GetUploadID() int32 {
	if o == nil || IsNil(o.UploadID) {
		var ret int32
		return ret
	}
	return *o.UploadID
}

// GetUploadIDOk returns a tuple with the UploadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadataBuffer) GetUploadIDOk() (*int32, bool) {
	if o == nil || IsNil(o.UploadID) {
		return nil, false
	}
	return o.UploadID, true
}

// HasUploadID returns a boolean if a field has been set.
func (o *SupplierTaskMetadataBuffer) HasUploadID() bool {
	if o != nil && !IsNil(o.UploadID) {
		return true
	}

	return false
}

// SetUploadID gets a reference to the given int32 and assigns it to the UploadID field.
func (o *SupplierTaskMetadataBuffer) SetUploadID(v int32) {
	o.UploadID = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SupplierTaskMetadataBuffer) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadataBuffer) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SupplierTaskMetadataBuffer) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *SupplierTaskMetadataBuffer) SetStatus(v int32) {
	o.Status = &v
}

// GetUploadDate returns the UploadDate field value if set, zero value otherwise.
func (o *SupplierTaskMetadataBuffer) GetUploadDate() string {
	if o == nil || IsNil(o.UploadDate) {
		var ret string
		return ret
	}
	return *o.UploadDate
}

// GetUploadDateOk returns a tuple with the UploadDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadataBuffer) GetUploadDateOk() (*string, bool) {
	if o == nil || IsNil(o.UploadDate) {
		return nil, false
	}
	return o.UploadDate, true
}

// HasUploadDate returns a boolean if a field has been set.
func (o *SupplierTaskMetadataBuffer) HasUploadDate() bool {
	if o != nil && !IsNil(o.UploadDate) {
		return true
	}

	return false
}

// SetUploadDate gets a reference to the given string and assigns it to the UploadDate field.
func (o *SupplierTaskMetadataBuffer) SetUploadDate(v string) {
	o.UploadDate = &v
}

// GetActivationDate returns the ActivationDate field value if set, zero value otherwise.
func (o *SupplierTaskMetadataBuffer) GetActivationDate() string {
	if o == nil || IsNil(o.ActivationDate) {
		var ret string
		return ret
	}
	return *o.ActivationDate
}

// GetActivationDateOk returns a tuple with the ActivationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadataBuffer) GetActivationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationDate) {
		return nil, false
	}
	return o.ActivationDate, true
}

// HasActivationDate returns a boolean if a field has been set.
func (o *SupplierTaskMetadataBuffer) HasActivationDate() bool {
	if o != nil && !IsNil(o.ActivationDate) {
		return true
	}

	return false
}

// SetActivationDate gets a reference to the given string and assigns it to the ActivationDate field.
func (o *SupplierTaskMetadataBuffer) SetActivationDate(v string) {
	o.ActivationDate = &v
}

// GetOverAllGoodsNumber returns the OverAllGoodsNumber field value if set, zero value otherwise.
func (o *SupplierTaskMetadataBuffer) GetOverAllGoodsNumber() int32 {
	if o == nil || IsNil(o.OverAllGoodsNumber) {
		var ret int32
		return ret
	}
	return *o.OverAllGoodsNumber
}

// GetOverAllGoodsNumberOk returns a tuple with the OverAllGoodsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadataBuffer) GetOverAllGoodsNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.OverAllGoodsNumber) {
		return nil, false
	}
	return o.OverAllGoodsNumber, true
}

// HasOverAllGoodsNumber returns a boolean if a field has been set.
func (o *SupplierTaskMetadataBuffer) HasOverAllGoodsNumber() bool {
	if o != nil && !IsNil(o.OverAllGoodsNumber) {
		return true
	}

	return false
}

// SetOverAllGoodsNumber gets a reference to the given int32 and assigns it to the OverAllGoodsNumber field.
func (o *SupplierTaskMetadataBuffer) SetOverAllGoodsNumber(v int32) {
	o.OverAllGoodsNumber = &v
}

// GetSuccessGoodsNumber returns the SuccessGoodsNumber field value if set, zero value otherwise.
func (o *SupplierTaskMetadataBuffer) GetSuccessGoodsNumber() int32 {
	if o == nil || IsNil(o.SuccessGoodsNumber) {
		var ret int32
		return ret
	}
	return *o.SuccessGoodsNumber
}

// GetSuccessGoodsNumberOk returns a tuple with the SuccessGoodsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadataBuffer) GetSuccessGoodsNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.SuccessGoodsNumber) {
		return nil, false
	}
	return o.SuccessGoodsNumber, true
}

// HasSuccessGoodsNumber returns a boolean if a field has been set.
func (o *SupplierTaskMetadataBuffer) HasSuccessGoodsNumber() bool {
	if o != nil && !IsNil(o.SuccessGoodsNumber) {
		return true
	}

	return false
}

// SetSuccessGoodsNumber gets a reference to the given int32 and assigns it to the SuccessGoodsNumber field.
func (o *SupplierTaskMetadataBuffer) SetSuccessGoodsNumber(v int32) {
	o.SuccessGoodsNumber = &v
}

func (o SupplierTaskMetadataBuffer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupplierTaskMetadataBuffer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UploadID) {
		toSerialize["uploadID"] = o.UploadID
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UploadDate) {
		toSerialize["uploadDate"] = o.UploadDate
	}
	if !IsNil(o.ActivationDate) {
		toSerialize["activationDate"] = o.ActivationDate
	}
	if !IsNil(o.OverAllGoodsNumber) {
		toSerialize["overAllGoodsNumber"] = o.OverAllGoodsNumber
	}
	if !IsNil(o.SuccessGoodsNumber) {
		toSerialize["successGoodsNumber"] = o.SuccessGoodsNumber
	}
	return toSerialize, nil
}

type NullableSupplierTaskMetadataBuffer struct {
	value *SupplierTaskMetadataBuffer
	isSet bool
}

func (v NullableSupplierTaskMetadataBuffer) Get() *SupplierTaskMetadataBuffer {
	return v.value
}

func (v *NullableSupplierTaskMetadataBuffer) Set(val *SupplierTaskMetadataBuffer) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplierTaskMetadataBuffer) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplierTaskMetadataBuffer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplierTaskMetadataBuffer(val *SupplierTaskMetadataBuffer) *NullableSupplierTaskMetadataBuffer {
	return &NullableSupplierTaskMetadataBuffer{value: val, isSet: true}
}

func (v NullableSupplierTaskMetadataBuffer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplierTaskMetadataBuffer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
