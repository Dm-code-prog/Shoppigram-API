/*
API цен и скидок

С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов раздела **Цены и скидки**.

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricesapi

import (
	"encoding/json"
)

// checks if the ApiV2ListGoodsSizeNmGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV2ListGoodsSizeNmGet200ResponseData{}

// ApiV2ListGoodsSizeNmGet200ResponseData struct for ApiV2ListGoodsSizeNmGet200ResponseData
type ApiV2ListGoodsSizeNmGet200ResponseData struct {
	// Размеры товара
	ListGoods []SizeGood `json:"listGoods,omitempty"`
}

// NewApiV2ListGoodsSizeNmGet200ResponseData instantiates a new ApiV2ListGoodsSizeNmGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2ListGoodsSizeNmGet200ResponseData() *ApiV2ListGoodsSizeNmGet200ResponseData {
	this := ApiV2ListGoodsSizeNmGet200ResponseData{}
	return &this
}

// NewApiV2ListGoodsSizeNmGet200ResponseDataWithDefaults instantiates a new ApiV2ListGoodsSizeNmGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2ListGoodsSizeNmGet200ResponseDataWithDefaults() *ApiV2ListGoodsSizeNmGet200ResponseData {
	this := ApiV2ListGoodsSizeNmGet200ResponseData{}
	return &this
}

// GetListGoods returns the ListGoods field value if set, zero value otherwise.
func (o *ApiV2ListGoodsSizeNmGet200ResponseData) GetListGoods() []SizeGood {
	if o == nil || IsNil(o.ListGoods) {
		var ret []SizeGood
		return ret
	}
	return o.ListGoods
}

// GetListGoodsOk returns a tuple with the ListGoods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV2ListGoodsSizeNmGet200ResponseData) GetListGoodsOk() ([]SizeGood, bool) {
	if o == nil || IsNil(o.ListGoods) {
		return nil, false
	}
	return o.ListGoods, true
}

// HasListGoods returns a boolean if a field has been set.
func (o *ApiV2ListGoodsSizeNmGet200ResponseData) HasListGoods() bool {
	if o != nil && !IsNil(o.ListGoods) {
		return true
	}

	return false
}

// SetListGoods gets a reference to the given []SizeGood and assigns it to the ListGoods field.
func (o *ApiV2ListGoodsSizeNmGet200ResponseData) SetListGoods(v []SizeGood) {
	o.ListGoods = v
}

func (o ApiV2ListGoodsSizeNmGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV2ListGoodsSizeNmGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ListGoods) {
		toSerialize["listGoods"] = o.ListGoods
	}
	return toSerialize, nil
}

type NullableApiV2ListGoodsSizeNmGet200ResponseData struct {
	value *ApiV2ListGoodsSizeNmGet200ResponseData
	isSet bool
}

func (v NullableApiV2ListGoodsSizeNmGet200ResponseData) Get() *ApiV2ListGoodsSizeNmGet200ResponseData {
	return v.value
}

func (v *NullableApiV2ListGoodsSizeNmGet200ResponseData) Set(val *ApiV2ListGoodsSizeNmGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2ListGoodsSizeNmGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2ListGoodsSizeNmGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2ListGoodsSizeNmGet200ResponseData(val *ApiV2ListGoodsSizeNmGet200ResponseData) *NullableApiV2ListGoodsSizeNmGet200ResponseData {
	return &NullableApiV2ListGoodsSizeNmGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiV2ListGoodsSizeNmGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2ListGoodsSizeNmGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
