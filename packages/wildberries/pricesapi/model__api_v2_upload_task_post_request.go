/*
API цен и скидок

С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов раздела **Цены и скидки**.

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricesapi

import (
	"encoding/json"
)

// checks if the ApiV2UploadTaskPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV2UploadTaskPostRequest{}

// ApiV2UploadTaskPostRequest struct for ApiV2UploadTaskPostRequest
type ApiV2UploadTaskPostRequest struct {
	// Товары, цены и скидки для них. Максимум 1 000 товаров. Цена и скидка не могут быть пустыми одновременно. <br><br> Если новая цена со скидкой будет хотя бы в 3 раза меньше старой, она попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и товар будет продаваться по старой цене. Ошибка об этом будет в ответах методов [Состояния загрузок](./#tag/Sostoyaniya-zagruzok) <br><br> Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine)
	Data []Good `json:"data,omitempty"`
}

// NewApiV2UploadTaskPostRequest instantiates a new ApiV2UploadTaskPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2UploadTaskPostRequest() *ApiV2UploadTaskPostRequest {
	this := ApiV2UploadTaskPostRequest{}
	return &this
}

// NewApiV2UploadTaskPostRequestWithDefaults instantiates a new ApiV2UploadTaskPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2UploadTaskPostRequestWithDefaults() *ApiV2UploadTaskPostRequest {
	this := ApiV2UploadTaskPostRequest{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ApiV2UploadTaskPostRequest) GetData() []Good {
	if o == nil || IsNil(o.Data) {
		var ret []Good
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV2UploadTaskPostRequest) GetDataOk() ([]Good, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ApiV2UploadTaskPostRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Good and assigns it to the Data field.
func (o *ApiV2UploadTaskPostRequest) SetData(v []Good) {
	o.Data = v
}

func (o ApiV2UploadTaskPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV2UploadTaskPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableApiV2UploadTaskPostRequest struct {
	value *ApiV2UploadTaskPostRequest
	isSet bool
}

func (v NullableApiV2UploadTaskPostRequest) Get() *ApiV2UploadTaskPostRequest {
	return v.value
}

func (v *NullableApiV2UploadTaskPostRequest) Set(val *ApiV2UploadTaskPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2UploadTaskPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2UploadTaskPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2UploadTaskPostRequest(val *ApiV2UploadTaskPostRequest) *NullableApiV2UploadTaskPostRequest {
	return &NullableApiV2UploadTaskPostRequest{value: val, isSet: true}
}

func (v NullableApiV2UploadTaskPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2UploadTaskPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
