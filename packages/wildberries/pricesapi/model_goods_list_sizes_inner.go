/*
API цен и скидок

С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов раздела **Цены и скидки**.

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricesapi

import (
	"encoding/json"
)

// checks if the GoodsListSizesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsListSizesInner{}

// GoodsListSizesInner struct for GoodsListSizesInner
type GoodsListSizesInner struct {
	// ID размера. В методах контента это поле `chrtID`
	SizeID *int64 `json:"sizeID,omitempty"`
	// Цена
	Price *int32 `json:"price,omitempty"`
	// Цена со скидкой
	DiscountedPrice *float32 `json:"discountedPrice,omitempty"`
	// Размер товара
	TechSizeName *string `json:"techSizeName,omitempty"`
}

// NewGoodsListSizesInner instantiates a new GoodsListSizesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsListSizesInner() *GoodsListSizesInner {
	this := GoodsListSizesInner{}
	return &this
}

// NewGoodsListSizesInnerWithDefaults instantiates a new GoodsListSizesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsListSizesInnerWithDefaults() *GoodsListSizesInner {
	this := GoodsListSizesInner{}
	return &this
}

// GetSizeID returns the SizeID field value if set, zero value otherwise.
func (o *GoodsListSizesInner) GetSizeID() int64 {
	if o == nil || IsNil(o.SizeID) {
		var ret int64
		return ret
	}
	return *o.SizeID
}

// GetSizeIDOk returns a tuple with the SizeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsListSizesInner) GetSizeIDOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeID) {
		return nil, false
	}
	return o.SizeID, true
}

// HasSizeID returns a boolean if a field has been set.
func (o *GoodsListSizesInner) HasSizeID() bool {
	if o != nil && !IsNil(o.SizeID) {
		return true
	}

	return false
}

// SetSizeID gets a reference to the given int64 and assigns it to the SizeID field.
func (o *GoodsListSizesInner) SetSizeID(v int64) {
	o.SizeID = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GoodsListSizesInner) GetPrice() int32 {
	if o == nil || IsNil(o.Price) {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsListSizesInner) GetPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GoodsListSizesInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *GoodsListSizesInner) SetPrice(v int32) {
	o.Price = &v
}

// GetDiscountedPrice returns the DiscountedPrice field value if set, zero value otherwise.
func (o *GoodsListSizesInner) GetDiscountedPrice() float32 {
	if o == nil || IsNil(o.DiscountedPrice) {
		var ret float32
		return ret
	}
	return *o.DiscountedPrice
}

// GetDiscountedPriceOk returns a tuple with the DiscountedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsListSizesInner) GetDiscountedPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountedPrice) {
		return nil, false
	}
	return o.DiscountedPrice, true
}

// HasDiscountedPrice returns a boolean if a field has been set.
func (o *GoodsListSizesInner) HasDiscountedPrice() bool {
	if o != nil && !IsNil(o.DiscountedPrice) {
		return true
	}

	return false
}

// SetDiscountedPrice gets a reference to the given float32 and assigns it to the DiscountedPrice field.
func (o *GoodsListSizesInner) SetDiscountedPrice(v float32) {
	o.DiscountedPrice = &v
}

// GetTechSizeName returns the TechSizeName field value if set, zero value otherwise.
func (o *GoodsListSizesInner) GetTechSizeName() string {
	if o == nil || IsNil(o.TechSizeName) {
		var ret string
		return ret
	}
	return *o.TechSizeName
}

// GetTechSizeNameOk returns a tuple with the TechSizeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsListSizesInner) GetTechSizeNameOk() (*string, bool) {
	if o == nil || IsNil(o.TechSizeName) {
		return nil, false
	}
	return o.TechSizeName, true
}

// HasTechSizeName returns a boolean if a field has been set.
func (o *GoodsListSizesInner) HasTechSizeName() bool {
	if o != nil && !IsNil(o.TechSizeName) {
		return true
	}

	return false
}

// SetTechSizeName gets a reference to the given string and assigns it to the TechSizeName field.
func (o *GoodsListSizesInner) SetTechSizeName(v string) {
	o.TechSizeName = &v
}

func (o GoodsListSizesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsListSizesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SizeID) {
		toSerialize["sizeID"] = o.SizeID
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.DiscountedPrice) {
		toSerialize["discountedPrice"] = o.DiscountedPrice
	}
	if !IsNil(o.TechSizeName) {
		toSerialize["techSizeName"] = o.TechSizeName
	}
	return toSerialize, nil
}

type NullableGoodsListSizesInner struct {
	value *GoodsListSizesInner
	isSet bool
}

func (v NullableGoodsListSizesInner) Get() *GoodsListSizesInner {
	return v.value
}

func (v *NullableGoodsListSizesInner) Set(val *GoodsListSizesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsListSizesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsListSizesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsListSizesInner(val *GoodsListSizesInner) *NullableGoodsListSizesInner {
	return &NullableGoodsListSizesInner{value: val, isSet: true}
}

func (v NullableGoodsListSizesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsListSizesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
