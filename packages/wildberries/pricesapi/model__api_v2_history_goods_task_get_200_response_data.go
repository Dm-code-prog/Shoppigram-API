/*
API цен и скидок

С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов раздела **Цены и скидки**.

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricesapi

import (
	"encoding/json"
)

// checks if the ApiV2HistoryGoodsTaskGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV2HistoryGoodsTaskGet200ResponseData{}

// ApiV2HistoryGoodsTaskGet200ResponseData struct for ApiV2HistoryGoodsTaskGet200ResponseData
type ApiV2HistoryGoodsTaskGet200ResponseData struct {
	// ID загрузки
	UploadID *int32 `json:"uploadID,omitempty"`
	// Информация о товарах в загрузке
	HistoryGoods []GoodHistory `json:"historyGoods,omitempty"`
}

// NewApiV2HistoryGoodsTaskGet200ResponseData instantiates a new ApiV2HistoryGoodsTaskGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2HistoryGoodsTaskGet200ResponseData() *ApiV2HistoryGoodsTaskGet200ResponseData {
	this := ApiV2HistoryGoodsTaskGet200ResponseData{}
	return &this
}

// NewApiV2HistoryGoodsTaskGet200ResponseDataWithDefaults instantiates a new ApiV2HistoryGoodsTaskGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2HistoryGoodsTaskGet200ResponseDataWithDefaults() *ApiV2HistoryGoodsTaskGet200ResponseData {
	this := ApiV2HistoryGoodsTaskGet200ResponseData{}
	return &this
}

// GetUploadID returns the UploadID field value if set, zero value otherwise.
func (o *ApiV2HistoryGoodsTaskGet200ResponseData) GetUploadID() int32 {
	if o == nil || IsNil(o.UploadID) {
		var ret int32
		return ret
	}
	return *o.UploadID
}

// GetUploadIDOk returns a tuple with the UploadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV2HistoryGoodsTaskGet200ResponseData) GetUploadIDOk() (*int32, bool) {
	if o == nil || IsNil(o.UploadID) {
		return nil, false
	}
	return o.UploadID, true
}

// HasUploadID returns a boolean if a field has been set.
func (o *ApiV2HistoryGoodsTaskGet200ResponseData) HasUploadID() bool {
	if o != nil && !IsNil(o.UploadID) {
		return true
	}

	return false
}

// SetUploadID gets a reference to the given int32 and assigns it to the UploadID field.
func (o *ApiV2HistoryGoodsTaskGet200ResponseData) SetUploadID(v int32) {
	o.UploadID = &v
}

// GetHistoryGoods returns the HistoryGoods field value if set, zero value otherwise.
func (o *ApiV2HistoryGoodsTaskGet200ResponseData) GetHistoryGoods() []GoodHistory {
	if o == nil || IsNil(o.HistoryGoods) {
		var ret []GoodHistory
		return ret
	}
	return o.HistoryGoods
}

// GetHistoryGoodsOk returns a tuple with the HistoryGoods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV2HistoryGoodsTaskGet200ResponseData) GetHistoryGoodsOk() ([]GoodHistory, bool) {
	if o == nil || IsNil(o.HistoryGoods) {
		return nil, false
	}
	return o.HistoryGoods, true
}

// HasHistoryGoods returns a boolean if a field has been set.
func (o *ApiV2HistoryGoodsTaskGet200ResponseData) HasHistoryGoods() bool {
	if o != nil && !IsNil(o.HistoryGoods) {
		return true
	}

	return false
}

// SetHistoryGoods gets a reference to the given []GoodHistory and assigns it to the HistoryGoods field.
func (o *ApiV2HistoryGoodsTaskGet200ResponseData) SetHistoryGoods(v []GoodHistory) {
	o.HistoryGoods = v
}

func (o ApiV2HistoryGoodsTaskGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV2HistoryGoodsTaskGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UploadID) {
		toSerialize["uploadID"] = o.UploadID
	}
	if !IsNil(o.HistoryGoods) {
		toSerialize["historyGoods"] = o.HistoryGoods
	}
	return toSerialize, nil
}

type NullableApiV2HistoryGoodsTaskGet200ResponseData struct {
	value *ApiV2HistoryGoodsTaskGet200ResponseData
	isSet bool
}

func (v NullableApiV2HistoryGoodsTaskGet200ResponseData) Get() *ApiV2HistoryGoodsTaskGet200ResponseData {
	return v.value
}

func (v *NullableApiV2HistoryGoodsTaskGet200ResponseData) Set(val *ApiV2HistoryGoodsTaskGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2HistoryGoodsTaskGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2HistoryGoodsTaskGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2HistoryGoodsTaskGet200ResponseData(val *ApiV2HistoryGoodsTaskGet200ResponseData) *NullableApiV2HistoryGoodsTaskGet200ResponseData {
	return &NullableApiV2HistoryGoodsTaskGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiV2HistoryGoodsTaskGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2HistoryGoodsTaskGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
