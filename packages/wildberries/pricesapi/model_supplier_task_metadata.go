/*
API цен и скидок

С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов раздела **Цены и скидки**.

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricesapi

import (
	"encoding/json"
)

// checks if the SupplierTaskMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupplierTaskMetadata{}

// SupplierTaskMetadata struct for SupplierTaskMetadata
type SupplierTaskMetadata struct {
	// ID загрузки
	UploadID *int32 `json:"uploadID,omitempty"`
	// Статус загрузки:    * `3` — обработана, в товарах нет ошибок, цены и скидки обновились   * `4` — отменена   * `5` — обработана, но в товарах есть ошибки. Для товаров без ошибок цены и скидки обновились, а ошибки в остальных товарах можно получить с помощью метода [Детализация обработанной загрузки](#tag/Istoriya-zagruzok/paths/~1api~1v2~1history~1goods~1task/get)   * `6` — обработана, но во всех товарах есть ошибки. Их тоже можно получить с помощью метода [Детализация обработанной загрузки](#tag/Istoriya-zagruzok/paths/~1api~1v2~1history~1goods~1task/get)
	Status *int32 `json:"status,omitempty"`
	// Дата и время, когда загрузка создана
	UploadDate *string `json:"uploadDate,omitempty" validate:"regexp=YYYY-MM-DDTHH:MM:SSZ"`
	// Дата и время, когда загрузка отправляется в обработку
	ActivationDate *string `json:"activationDate,omitempty" validate:"regexp=YYYY-MM-DDTHH:MM:SSZ"`
	// Всего товаров
	OverAllGoodsNumber *int32 `json:"overAllGoodsNumber,omitempty"`
	// Товаров без ошибок
	SuccessGoodsNumber *int32 `json:"successGoodsNumber,omitempty"`
}

// NewSupplierTaskMetadata instantiates a new SupplierTaskMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplierTaskMetadata() *SupplierTaskMetadata {
	this := SupplierTaskMetadata{}
	return &this
}

// NewSupplierTaskMetadataWithDefaults instantiates a new SupplierTaskMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplierTaskMetadataWithDefaults() *SupplierTaskMetadata {
	this := SupplierTaskMetadata{}
	return &this
}

// GetUploadID returns the UploadID field value if set, zero value otherwise.
func (o *SupplierTaskMetadata) GetUploadID() int32 {
	if o == nil || IsNil(o.UploadID) {
		var ret int32
		return ret
	}
	return *o.UploadID
}

// GetUploadIDOk returns a tuple with the UploadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadata) GetUploadIDOk() (*int32, bool) {
	if o == nil || IsNil(o.UploadID) {
		return nil, false
	}
	return o.UploadID, true
}

// HasUploadID returns a boolean if a field has been set.
func (o *SupplierTaskMetadata) HasUploadID() bool {
	if o != nil && !IsNil(o.UploadID) {
		return true
	}

	return false
}

// SetUploadID gets a reference to the given int32 and assigns it to the UploadID field.
func (o *SupplierTaskMetadata) SetUploadID(v int32) {
	o.UploadID = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SupplierTaskMetadata) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadata) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SupplierTaskMetadata) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *SupplierTaskMetadata) SetStatus(v int32) {
	o.Status = &v
}

// GetUploadDate returns the UploadDate field value if set, zero value otherwise.
func (o *SupplierTaskMetadata) GetUploadDate() string {
	if o == nil || IsNil(o.UploadDate) {
		var ret string
		return ret
	}
	return *o.UploadDate
}

// GetUploadDateOk returns a tuple with the UploadDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadata) GetUploadDateOk() (*string, bool) {
	if o == nil || IsNil(o.UploadDate) {
		return nil, false
	}
	return o.UploadDate, true
}

// HasUploadDate returns a boolean if a field has been set.
func (o *SupplierTaskMetadata) HasUploadDate() bool {
	if o != nil && !IsNil(o.UploadDate) {
		return true
	}

	return false
}

// SetUploadDate gets a reference to the given string and assigns it to the UploadDate field.
func (o *SupplierTaskMetadata) SetUploadDate(v string) {
	o.UploadDate = &v
}

// GetActivationDate returns the ActivationDate field value if set, zero value otherwise.
func (o *SupplierTaskMetadata) GetActivationDate() string {
	if o == nil || IsNil(o.ActivationDate) {
		var ret string
		return ret
	}
	return *o.ActivationDate
}

// GetActivationDateOk returns a tuple with the ActivationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadata) GetActivationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationDate) {
		return nil, false
	}
	return o.ActivationDate, true
}

// HasActivationDate returns a boolean if a field has been set.
func (o *SupplierTaskMetadata) HasActivationDate() bool {
	if o != nil && !IsNil(o.ActivationDate) {
		return true
	}

	return false
}

// SetActivationDate gets a reference to the given string and assigns it to the ActivationDate field.
func (o *SupplierTaskMetadata) SetActivationDate(v string) {
	o.ActivationDate = &v
}

// GetOverAllGoodsNumber returns the OverAllGoodsNumber field value if set, zero value otherwise.
func (o *SupplierTaskMetadata) GetOverAllGoodsNumber() int32 {
	if o == nil || IsNil(o.OverAllGoodsNumber) {
		var ret int32
		return ret
	}
	return *o.OverAllGoodsNumber
}

// GetOverAllGoodsNumberOk returns a tuple with the OverAllGoodsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadata) GetOverAllGoodsNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.OverAllGoodsNumber) {
		return nil, false
	}
	return o.OverAllGoodsNumber, true
}

// HasOverAllGoodsNumber returns a boolean if a field has been set.
func (o *SupplierTaskMetadata) HasOverAllGoodsNumber() bool {
	if o != nil && !IsNil(o.OverAllGoodsNumber) {
		return true
	}

	return false
}

// SetOverAllGoodsNumber gets a reference to the given int32 and assigns it to the OverAllGoodsNumber field.
func (o *SupplierTaskMetadata) SetOverAllGoodsNumber(v int32) {
	o.OverAllGoodsNumber = &v
}

// GetSuccessGoodsNumber returns the SuccessGoodsNumber field value if set, zero value otherwise.
func (o *SupplierTaskMetadata) GetSuccessGoodsNumber() int32 {
	if o == nil || IsNil(o.SuccessGoodsNumber) {
		var ret int32
		return ret
	}
	return *o.SuccessGoodsNumber
}

// GetSuccessGoodsNumberOk returns a tuple with the SuccessGoodsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplierTaskMetadata) GetSuccessGoodsNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.SuccessGoodsNumber) {
		return nil, false
	}
	return o.SuccessGoodsNumber, true
}

// HasSuccessGoodsNumber returns a boolean if a field has been set.
func (o *SupplierTaskMetadata) HasSuccessGoodsNumber() bool {
	if o != nil && !IsNil(o.SuccessGoodsNumber) {
		return true
	}

	return false
}

// SetSuccessGoodsNumber gets a reference to the given int32 and assigns it to the SuccessGoodsNumber field.
func (o *SupplierTaskMetadata) SetSuccessGoodsNumber(v int32) {
	o.SuccessGoodsNumber = &v
}

func (o SupplierTaskMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupplierTaskMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UploadID) {
		toSerialize["uploadID"] = o.UploadID
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UploadDate) {
		toSerialize["uploadDate"] = o.UploadDate
	}
	if !IsNil(o.ActivationDate) {
		toSerialize["activationDate"] = o.ActivationDate
	}
	if !IsNil(o.OverAllGoodsNumber) {
		toSerialize["overAllGoodsNumber"] = o.OverAllGoodsNumber
	}
	if !IsNil(o.SuccessGoodsNumber) {
		toSerialize["successGoodsNumber"] = o.SuccessGoodsNumber
	}
	return toSerialize, nil
}

type NullableSupplierTaskMetadata struct {
	value *SupplierTaskMetadata
	isSet bool
}

func (v NullableSupplierTaskMetadata) Get() *SupplierTaskMetadata {
	return v.value
}

func (v *NullableSupplierTaskMetadata) Set(val *SupplierTaskMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplierTaskMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplierTaskMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplierTaskMetadata(val *SupplierTaskMetadata) *NullableSupplierTaskMetadata {
	return &NullableSupplierTaskMetadata{value: val, isSet: true}
}

func (v NullableSupplierTaskMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplierTaskMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
