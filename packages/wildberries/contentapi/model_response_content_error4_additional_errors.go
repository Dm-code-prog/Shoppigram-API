/*
Описание API Контента

 <dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> <br>  <br>

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contentapi

import (
	"encoding/json"
)

// checks if the ResponseContentError4AdditionalErrors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseContentError4AdditionalErrors{}

// ResponseContentError4AdditionalErrors Дополнительные ошибки
type ResponseContentError4AdditionalErrors struct {
	Description *string `json:"description,omitempty"`
}

// NewResponseContentError4AdditionalErrors instantiates a new ResponseContentError4AdditionalErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseContentError4AdditionalErrors() *ResponseContentError4AdditionalErrors {
	this := ResponseContentError4AdditionalErrors{}
	return &this
}

// NewResponseContentError4AdditionalErrorsWithDefaults instantiates a new ResponseContentError4AdditionalErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseContentError4AdditionalErrorsWithDefaults() *ResponseContentError4AdditionalErrors {
	this := ResponseContentError4AdditionalErrors{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResponseContentError4AdditionalErrors) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseContentError4AdditionalErrors) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResponseContentError4AdditionalErrors) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResponseContentError4AdditionalErrors) SetDescription(v string) {
	o.Description = &v
}

func (o ResponseContentError4AdditionalErrors) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseContentError4AdditionalErrors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableResponseContentError4AdditionalErrors struct {
	value *ResponseContentError4AdditionalErrors
	isSet bool
}

func (v NullableResponseContentError4AdditionalErrors) Get() *ResponseContentError4AdditionalErrors {
	return v.value
}

func (v *NullableResponseContentError4AdditionalErrors) Set(val *ResponseContentError4AdditionalErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseContentError4AdditionalErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseContentError4AdditionalErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseContentError4AdditionalErrors(val *ResponseContentError4AdditionalErrors) *NullableResponseContentError4AdditionalErrors {
	return &NullableResponseContentError4AdditionalErrors{value: val, isSet: true}
}

func (v NullableResponseContentError4AdditionalErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseContentError4AdditionalErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
