/*
Описание API Контента

 <dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> <br>  <br>

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contentapi

import (
	"encoding/json"
)

// checks if the ContentV2TagNomenclatureLinkPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentV2TagNomenclatureLinkPostRequest{}

// ContentV2TagNomenclatureLinkPostRequest struct for ContentV2TagNomenclatureLinkPostRequest
type ContentV2TagNomenclatureLinkPostRequest struct {
	// Артикул WB
	NmID *int32 `json:"nmID,omitempty"`
	// Массив числовых идентификаторов тегов.<br>   Что бы снять теги с КТ, необходимо передать пустой массив.<br> Чтобы добавить теги к уже имеющимся в КТ, необходимо в запросе передать новые теги и теги, которые уже есть в КТ.
	TagsIDs []int32 `json:"tagsIDs,omitempty"`
}

// NewContentV2TagNomenclatureLinkPostRequest instantiates a new ContentV2TagNomenclatureLinkPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentV2TagNomenclatureLinkPostRequest() *ContentV2TagNomenclatureLinkPostRequest {
	this := ContentV2TagNomenclatureLinkPostRequest{}
	return &this
}

// NewContentV2TagNomenclatureLinkPostRequestWithDefaults instantiates a new ContentV2TagNomenclatureLinkPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentV2TagNomenclatureLinkPostRequestWithDefaults() *ContentV2TagNomenclatureLinkPostRequest {
	this := ContentV2TagNomenclatureLinkPostRequest{}
	return &this
}

// GetNmID returns the NmID field value if set, zero value otherwise.
func (o *ContentV2TagNomenclatureLinkPostRequest) GetNmID() int32 {
	if o == nil || IsNil(o.NmID) {
		var ret int32
		return ret
	}
	return *o.NmID
}

// GetNmIDOk returns a tuple with the NmID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2TagNomenclatureLinkPostRequest) GetNmIDOk() (*int32, bool) {
	if o == nil || IsNil(o.NmID) {
		return nil, false
	}
	return o.NmID, true
}

// HasNmID returns a boolean if a field has been set.
func (o *ContentV2TagNomenclatureLinkPostRequest) HasNmID() bool {
	if o != nil && !IsNil(o.NmID) {
		return true
	}

	return false
}

// SetNmID gets a reference to the given int32 and assigns it to the NmID field.
func (o *ContentV2TagNomenclatureLinkPostRequest) SetNmID(v int32) {
	o.NmID = &v
}

// GetTagsIDs returns the TagsIDs field value if set, zero value otherwise.
func (o *ContentV2TagNomenclatureLinkPostRequest) GetTagsIDs() []int32 {
	if o == nil || IsNil(o.TagsIDs) {
		var ret []int32
		return ret
	}
	return o.TagsIDs
}

// GetTagsIDsOk returns a tuple with the TagsIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2TagNomenclatureLinkPostRequest) GetTagsIDsOk() ([]int32, bool) {
	if o == nil || IsNil(o.TagsIDs) {
		return nil, false
	}
	return o.TagsIDs, true
}

// HasTagsIDs returns a boolean if a field has been set.
func (o *ContentV2TagNomenclatureLinkPostRequest) HasTagsIDs() bool {
	if o != nil && !IsNil(o.TagsIDs) {
		return true
	}

	return false
}

// SetTagsIDs gets a reference to the given []int32 and assigns it to the TagsIDs field.
func (o *ContentV2TagNomenclatureLinkPostRequest) SetTagsIDs(v []int32) {
	o.TagsIDs = v
}

func (o ContentV2TagNomenclatureLinkPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentV2TagNomenclatureLinkPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NmID) {
		toSerialize["nmID"] = o.NmID
	}
	if !IsNil(o.TagsIDs) {
		toSerialize["tagsIDs"] = o.TagsIDs
	}
	return toSerialize, nil
}

type NullableContentV2TagNomenclatureLinkPostRequest struct {
	value *ContentV2TagNomenclatureLinkPostRequest
	isSet bool
}

func (v NullableContentV2TagNomenclatureLinkPostRequest) Get() *ContentV2TagNomenclatureLinkPostRequest {
	return v.value
}

func (v *NullableContentV2TagNomenclatureLinkPostRequest) Set(val *ContentV2TagNomenclatureLinkPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContentV2TagNomenclatureLinkPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContentV2TagNomenclatureLinkPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentV2TagNomenclatureLinkPostRequest(val *ContentV2TagNomenclatureLinkPostRequest) *NullableContentV2TagNomenclatureLinkPostRequest {
	return &NullableContentV2TagNomenclatureLinkPostRequest{value: val, isSet: true}
}

func (v NullableContentV2TagNomenclatureLinkPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentV2TagNomenclatureLinkPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
