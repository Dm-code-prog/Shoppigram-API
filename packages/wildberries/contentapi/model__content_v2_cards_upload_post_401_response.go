/*
Описание API Контента

 <dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> <br>  <br>

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contentapi

import (
	"encoding/json"
)

// checks if the ContentV2CardsUploadPost401Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentV2CardsUploadPost401Response{}

// ContentV2CardsUploadPost401Response struct for ContentV2CardsUploadPost401Response
type ContentV2CardsUploadPost401Response struct {
	// Заголовок ошибки
	Title *string `json:"title,omitempty"`
	// Детали ошибки
	Detail *string `json:"detail,omitempty"`
	// Внутренний код ошибки
	Code *string `json:"code,omitempty"`
	// Уникальный ShopID запроса
	RequestId *string `json:"requestId,omitempty"`
	// ShopID внутреннего сервиса WB
	Origin *string `json:"origin,omitempty"`
	// HTTP статус-код
	Status *float32 `json:"status,omitempty"`
	// Расшифровка HTTP статус-кода
	StatusText *string `json:"statusText,omitempty"`
	// Дата и время запроса
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewContentV2CardsUploadPost401Response instantiates a new ContentV2CardsUploadPost401Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentV2CardsUploadPost401Response() *ContentV2CardsUploadPost401Response {
	this := ContentV2CardsUploadPost401Response{}
	return &this
}

// NewContentV2CardsUploadPost401ResponseWithDefaults instantiates a new ContentV2CardsUploadPost401Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentV2CardsUploadPost401ResponseWithDefaults() *ContentV2CardsUploadPost401Response {
	this := ContentV2CardsUploadPost401Response{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ContentV2CardsUploadPost401Response) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPost401Response) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ContentV2CardsUploadPost401Response) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ContentV2CardsUploadPost401Response) SetTitle(v string) {
	o.Title = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ContentV2CardsUploadPost401Response) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPost401Response) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ContentV2CardsUploadPost401Response) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ContentV2CardsUploadPost401Response) SetDetail(v string) {
	o.Detail = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ContentV2CardsUploadPost401Response) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPost401Response) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ContentV2CardsUploadPost401Response) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ContentV2CardsUploadPost401Response) SetCode(v string) {
	o.Code = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ContentV2CardsUploadPost401Response) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPost401Response) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ContentV2CardsUploadPost401Response) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ContentV2CardsUploadPost401Response) SetRequestId(v string) {
	o.RequestId = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *ContentV2CardsUploadPost401Response) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPost401Response) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *ContentV2CardsUploadPost401Response) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *ContentV2CardsUploadPost401Response) SetOrigin(v string) {
	o.Origin = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ContentV2CardsUploadPost401Response) GetStatus() float32 {
	if o == nil || IsNil(o.Status) {
		var ret float32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPost401Response) GetStatusOk() (*float32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ContentV2CardsUploadPost401Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given float32 and assigns it to the Status field.
func (o *ContentV2CardsUploadPost401Response) SetStatus(v float32) {
	o.Status = &v
}

// GetStatusText returns the StatusText field value if set, zero value otherwise.
func (o *ContentV2CardsUploadPost401Response) GetStatusText() string {
	if o == nil || IsNil(o.StatusText) {
		var ret string
		return ret
	}
	return *o.StatusText
}

// GetStatusTextOk returns a tuple with the StatusText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPost401Response) GetStatusTextOk() (*string, bool) {
	if o == nil || IsNil(o.StatusText) {
		return nil, false
	}
	return o.StatusText, true
}

// HasStatusText returns a boolean if a field has been set.
func (o *ContentV2CardsUploadPost401Response) HasStatusText() bool {
	if o != nil && !IsNil(o.StatusText) {
		return true
	}

	return false
}

// SetStatusText gets a reference to the given string and assigns it to the StatusText field.
func (o *ContentV2CardsUploadPost401Response) SetStatusText(v string) {
	o.StatusText = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ContentV2CardsUploadPost401Response) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPost401Response) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ContentV2CardsUploadPost401Response) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *ContentV2CardsUploadPost401Response) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o ContentV2CardsUploadPost401Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentV2CardsUploadPost401Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusText) {
		toSerialize["statusText"] = o.StatusText
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableContentV2CardsUploadPost401Response struct {
	value *ContentV2CardsUploadPost401Response
	isSet bool
}

func (v NullableContentV2CardsUploadPost401Response) Get() *ContentV2CardsUploadPost401Response {
	return v.value
}

func (v *NullableContentV2CardsUploadPost401Response) Set(val *ContentV2CardsUploadPost401Response) {
	v.value = val
	v.isSet = true
}

func (v NullableContentV2CardsUploadPost401Response) IsSet() bool {
	return v.isSet
}

func (v *NullableContentV2CardsUploadPost401Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentV2CardsUploadPost401Response(val *ContentV2CardsUploadPost401Response) *NullableContentV2CardsUploadPost401Response {
	return &NullableContentV2CardsUploadPost401Response{value: val, isSet: true}
}

func (v NullableContentV2CardsUploadPost401Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentV2CardsUploadPost401Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
