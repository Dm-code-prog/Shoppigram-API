/*
Описание API Контента

 <dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> <br>  <br>

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contentapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ContentV2CardsUploadPostRequestInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentV2CardsUploadPostRequestInner{}

// ContentV2CardsUploadPostRequestInner struct for ContentV2CardsUploadPostRequestInner
type ContentV2CardsUploadPostRequestInner struct {
	// ShopID предмета
	SubjectID int32 `json:"subjectID"`
	// Массив вариантов товара. В каждой КТ может быть не более 30 вариантов (НМ)
	Variants []ContentV2CardsUploadPostRequestInnerVariantsInner `json:"variants"`
}

type _ContentV2CardsUploadPostRequestInner ContentV2CardsUploadPostRequestInner

// NewContentV2CardsUploadPostRequestInner instantiates a new ContentV2CardsUploadPostRequestInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentV2CardsUploadPostRequestInner(subjectID int32, variants []ContentV2CardsUploadPostRequestInnerVariantsInner) *ContentV2CardsUploadPostRequestInner {
	this := ContentV2CardsUploadPostRequestInner{}
	this.SubjectID = subjectID
	this.Variants = variants
	return &this
}

// NewContentV2CardsUploadPostRequestInnerWithDefaults instantiates a new ContentV2CardsUploadPostRequestInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentV2CardsUploadPostRequestInnerWithDefaults() *ContentV2CardsUploadPostRequestInner {
	this := ContentV2CardsUploadPostRequestInner{}
	return &this
}

// GetSubjectID returns the SubjectID field value
func (o *ContentV2CardsUploadPostRequestInner) GetSubjectID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubjectID
}

// GetSubjectIDOk returns a tuple with the SubjectID field value
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPostRequestInner) GetSubjectIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectID, true
}

// SetSubjectID sets field value
func (o *ContentV2CardsUploadPostRequestInner) SetSubjectID(v int32) {
	o.SubjectID = v
}

// GetVariants returns the Variants field value
func (o *ContentV2CardsUploadPostRequestInner) GetVariants() []ContentV2CardsUploadPostRequestInnerVariantsInner {
	if o == nil {
		var ret []ContentV2CardsUploadPostRequestInnerVariantsInner
		return ret
	}

	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value
// and a boolean to check if the value has been set.
func (o *ContentV2CardsUploadPostRequestInner) GetVariantsOk() ([]ContentV2CardsUploadPostRequestInnerVariantsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Variants, true
}

// SetVariants sets field value
func (o *ContentV2CardsUploadPostRequestInner) SetVariants(v []ContentV2CardsUploadPostRequestInnerVariantsInner) {
	o.Variants = v
}

func (o ContentV2CardsUploadPostRequestInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentV2CardsUploadPostRequestInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subjectID"] = o.SubjectID
	toSerialize["variants"] = o.Variants
	return toSerialize, nil
}

func (o *ContentV2CardsUploadPostRequestInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subjectID",
		"variants",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContentV2CardsUploadPostRequestInner := _ContentV2CardsUploadPostRequestInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContentV2CardsUploadPostRequestInner)

	if err != nil {
		return err
	}

	*o = ContentV2CardsUploadPostRequestInner(varContentV2CardsUploadPostRequestInner)

	return err
}

type NullableContentV2CardsUploadPostRequestInner struct {
	value *ContentV2CardsUploadPostRequestInner
	isSet bool
}

func (v NullableContentV2CardsUploadPostRequestInner) Get() *ContentV2CardsUploadPostRequestInner {
	return v.value
}

func (v *NullableContentV2CardsUploadPostRequestInner) Set(val *ContentV2CardsUploadPostRequestInner) {
	v.value = val
	v.isSet = true
}

func (v NullableContentV2CardsUploadPostRequestInner) IsSet() bool {
	return v.isSet
}

func (v *NullableContentV2CardsUploadPostRequestInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentV2CardsUploadPostRequestInner(val *ContentV2CardsUploadPostRequestInner) *NullableContentV2CardsUploadPostRequestInner {
	return &NullableContentV2CardsUploadPostRequestInner{value: val, isSet: true}
}

func (v NullableContentV2CardsUploadPostRequestInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentV2CardsUploadPostRequestInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
