/*
Описание API Контента

 <dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> <br>  <br>

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contentapi

import (
	"encoding/json"
)

// checks if the ContentV3MediaSavePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentV3MediaSavePostRequest{}

// ContentV3MediaSavePostRequest struct for ContentV3MediaSavePostRequest
type ContentV3MediaSavePostRequest struct {
	// Артикул Wildberries
	NmId *int32 `json:"nmId,omitempty"`
	// Ссылки на изображения в том порядке, в котором они будут на карточке товара
	Data []string `json:"data,omitempty"`
}

// NewContentV3MediaSavePostRequest instantiates a new ContentV3MediaSavePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentV3MediaSavePostRequest() *ContentV3MediaSavePostRequest {
	this := ContentV3MediaSavePostRequest{}
	return &this
}

// NewContentV3MediaSavePostRequestWithDefaults instantiates a new ContentV3MediaSavePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentV3MediaSavePostRequestWithDefaults() *ContentV3MediaSavePostRequest {
	this := ContentV3MediaSavePostRequest{}
	return &this
}

// GetNmId returns the NmId field value if set, zero value otherwise.
func (o *ContentV3MediaSavePostRequest) GetNmId() int32 {
	if o == nil || IsNil(o.NmId) {
		var ret int32
		return ret
	}
	return *o.NmId
}

// GetNmIdOk returns a tuple with the NmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV3MediaSavePostRequest) GetNmIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NmId) {
		return nil, false
	}
	return o.NmId, true
}

// HasNmId returns a boolean if a field has been set.
func (o *ContentV3MediaSavePostRequest) HasNmId() bool {
	if o != nil && !IsNil(o.NmId) {
		return true
	}

	return false
}

// SetNmId gets a reference to the given int32 and assigns it to the NmId field.
func (o *ContentV3MediaSavePostRequest) SetNmId(v int32) {
	o.NmId = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ContentV3MediaSavePostRequest) GetData() []string {
	if o == nil || IsNil(o.Data) {
		var ret []string
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV3MediaSavePostRequest) GetDataOk() ([]string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ContentV3MediaSavePostRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []string and assigns it to the Data field.
func (o *ContentV3MediaSavePostRequest) SetData(v []string) {
	o.Data = v
}

func (o ContentV3MediaSavePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentV3MediaSavePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NmId) {
		toSerialize["nmId"] = o.NmId
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableContentV3MediaSavePostRequest struct {
	value *ContentV3MediaSavePostRequest
	isSet bool
}

func (v NullableContentV3MediaSavePostRequest) Get() *ContentV3MediaSavePostRequest {
	return v.value
}

func (v *NullableContentV3MediaSavePostRequest) Set(val *ContentV3MediaSavePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContentV3MediaSavePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContentV3MediaSavePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentV3MediaSavePostRequest(val *ContentV3MediaSavePostRequest) *NullableContentV3MediaSavePostRequest {
	return &NullableContentV3MediaSavePostRequest{value: val, isSet: true}
}

func (v NullableContentV3MediaSavePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentV3MediaSavePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
