/*
Описание API Контента

 <dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> <br>  <br>

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contentapi

import (
	"encoding/json"
)

// checks if the ContentV2GetCardsListPostRequestSettingsFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentV2GetCardsListPostRequestSettingsFilter{}

// ContentV2GetCardsListPostRequestSettingsFilter Параметры фильтрации
type ContentV2GetCardsListPostRequestSettingsFilter struct {
	// Фильтр по фото:    * `0` — только карточки без фото   * `1` — только карточки с фото   * `-1` — все карточки товара
	WithPhoto *int32 `json:"withPhoto,omitempty"`
	// Поиск по артикулу продавца, артикулу WB, баркоду
	TextSearch *string `json:"textSearch,omitempty"`
	// Поиск по ID тегов
	TagIDs []int32 `json:"tagIDs,omitempty"`
	// Фильтр по категории. `true` - только разрешённые, `false` - все. Не используется в песочнице.
	AllowedCategoriesOnly *bool `json:"allowedCategoriesOnly,omitempty"`
	// Поиск по id предметов
	ObjectIDs []int32 `json:"objectIDs,omitempty"`
	// Поиск по брендам
	Brands []string `json:"brands,omitempty"`
	// Поиск по идентификатору КТ
	ImtID *int32 `json:"imtID,omitempty"`
}

// NewContentV2GetCardsListPostRequestSettingsFilter instantiates a new ContentV2GetCardsListPostRequestSettingsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentV2GetCardsListPostRequestSettingsFilter() *ContentV2GetCardsListPostRequestSettingsFilter {
	this := ContentV2GetCardsListPostRequestSettingsFilter{}
	return &this
}

// NewContentV2GetCardsListPostRequestSettingsFilterWithDefaults instantiates a new ContentV2GetCardsListPostRequestSettingsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentV2GetCardsListPostRequestSettingsFilterWithDefaults() *ContentV2GetCardsListPostRequestSettingsFilter {
	this := ContentV2GetCardsListPostRequestSettingsFilter{}
	return &this
}

// GetWithPhoto returns the WithPhoto field value if set, zero value otherwise.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetWithPhoto() int32 {
	if o == nil || IsNil(o.WithPhoto) {
		var ret int32
		return ret
	}
	return *o.WithPhoto
}

// GetWithPhotoOk returns a tuple with the WithPhoto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetWithPhotoOk() (*int32, bool) {
	if o == nil || IsNil(o.WithPhoto) {
		return nil, false
	}
	return o.WithPhoto, true
}

// HasWithPhoto returns a boolean if a field has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) HasWithPhoto() bool {
	if o != nil && !IsNil(o.WithPhoto) {
		return true
	}

	return false
}

// SetWithPhoto gets a reference to the given int32 and assigns it to the WithPhoto field.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) SetWithPhoto(v int32) {
	o.WithPhoto = &v
}

// GetTextSearch returns the TextSearch field value if set, zero value otherwise.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetTextSearch() string {
	if o == nil || IsNil(o.TextSearch) {
		var ret string
		return ret
	}
	return *o.TextSearch
}

// GetTextSearchOk returns a tuple with the TextSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetTextSearchOk() (*string, bool) {
	if o == nil || IsNil(o.TextSearch) {
		return nil, false
	}
	return o.TextSearch, true
}

// HasTextSearch returns a boolean if a field has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) HasTextSearch() bool {
	if o != nil && !IsNil(o.TextSearch) {
		return true
	}

	return false
}

// SetTextSearch gets a reference to the given string and assigns it to the TextSearch field.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) SetTextSearch(v string) {
	o.TextSearch = &v
}

// GetTagIDs returns the TagIDs field value if set, zero value otherwise.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetTagIDs() []int32 {
	if o == nil || IsNil(o.TagIDs) {
		var ret []int32
		return ret
	}
	return o.TagIDs
}

// GetTagIDsOk returns a tuple with the TagIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetTagIDsOk() ([]int32, bool) {
	if o == nil || IsNil(o.TagIDs) {
		return nil, false
	}
	return o.TagIDs, true
}

// HasTagIDs returns a boolean if a field has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) HasTagIDs() bool {
	if o != nil && !IsNil(o.TagIDs) {
		return true
	}

	return false
}

// SetTagIDs gets a reference to the given []int32 and assigns it to the TagIDs field.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) SetTagIDs(v []int32) {
	o.TagIDs = v
}

// GetAllowedCategoriesOnly returns the AllowedCategoriesOnly field value if set, zero value otherwise.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetAllowedCategoriesOnly() bool {
	if o == nil || IsNil(o.AllowedCategoriesOnly) {
		var ret bool
		return ret
	}
	return *o.AllowedCategoriesOnly
}

// GetAllowedCategoriesOnlyOk returns a tuple with the AllowedCategoriesOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetAllowedCategoriesOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowedCategoriesOnly) {
		return nil, false
	}
	return o.AllowedCategoriesOnly, true
}

// HasAllowedCategoriesOnly returns a boolean if a field has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) HasAllowedCategoriesOnly() bool {
	if o != nil && !IsNil(o.AllowedCategoriesOnly) {
		return true
	}

	return false
}

// SetAllowedCategoriesOnly gets a reference to the given bool and assigns it to the AllowedCategoriesOnly field.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) SetAllowedCategoriesOnly(v bool) {
	o.AllowedCategoriesOnly = &v
}

// GetObjectIDs returns the ObjectIDs field value if set, zero value otherwise.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetObjectIDs() []int32 {
	if o == nil || IsNil(o.ObjectIDs) {
		var ret []int32
		return ret
	}
	return o.ObjectIDs
}

// GetObjectIDsOk returns a tuple with the ObjectIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetObjectIDsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ObjectIDs) {
		return nil, false
	}
	return o.ObjectIDs, true
}

// HasObjectIDs returns a boolean if a field has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) HasObjectIDs() bool {
	if o != nil && !IsNil(o.ObjectIDs) {
		return true
	}

	return false
}

// SetObjectIDs gets a reference to the given []int32 and assigns it to the ObjectIDs field.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) SetObjectIDs(v []int32) {
	o.ObjectIDs = v
}

// GetBrands returns the Brands field value if set, zero value otherwise.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetBrands() []string {
	if o == nil || IsNil(o.Brands) {
		var ret []string
		return ret
	}
	return o.Brands
}

// GetBrandsOk returns a tuple with the Brands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetBrandsOk() ([]string, bool) {
	if o == nil || IsNil(o.Brands) {
		return nil, false
	}
	return o.Brands, true
}

// HasBrands returns a boolean if a field has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) HasBrands() bool {
	if o != nil && !IsNil(o.Brands) {
		return true
	}

	return false
}

// SetBrands gets a reference to the given []string and assigns it to the Brands field.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) SetBrands(v []string) {
	o.Brands = v
}

// GetImtID returns the ImtID field value if set, zero value otherwise.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetImtID() int32 {
	if o == nil || IsNil(o.ImtID) {
		var ret int32
		return ret
	}
	return *o.ImtID
}

// GetImtIDOk returns a tuple with the ImtID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) GetImtIDOk() (*int32, bool) {
	if o == nil || IsNil(o.ImtID) {
		return nil, false
	}
	return o.ImtID, true
}

// HasImtID returns a boolean if a field has been set.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) HasImtID() bool {
	if o != nil && !IsNil(o.ImtID) {
		return true
	}

	return false
}

// SetImtID gets a reference to the given int32 and assigns it to the ImtID field.
func (o *ContentV2GetCardsListPostRequestSettingsFilter) SetImtID(v int32) {
	o.ImtID = &v
}

func (o ContentV2GetCardsListPostRequestSettingsFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentV2GetCardsListPostRequestSettingsFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WithPhoto) {
		toSerialize["withPhoto"] = o.WithPhoto
	}
	if !IsNil(o.TextSearch) {
		toSerialize["textSearch"] = o.TextSearch
	}
	if !IsNil(o.TagIDs) {
		toSerialize["tagIDs"] = o.TagIDs
	}
	if !IsNil(o.AllowedCategoriesOnly) {
		toSerialize["allowedCategoriesOnly"] = o.AllowedCategoriesOnly
	}
	if !IsNil(o.ObjectIDs) {
		toSerialize["objectIDs"] = o.ObjectIDs
	}
	if !IsNil(o.Brands) {
		toSerialize["brands"] = o.Brands
	}
	if !IsNil(o.ImtID) {
		toSerialize["imtID"] = o.ImtID
	}
	return toSerialize, nil
}

type NullableContentV2GetCardsListPostRequestSettingsFilter struct {
	value *ContentV2GetCardsListPostRequestSettingsFilter
	isSet bool
}

func (v NullableContentV2GetCardsListPostRequestSettingsFilter) Get() *ContentV2GetCardsListPostRequestSettingsFilter {
	return v.value
}

func (v *NullableContentV2GetCardsListPostRequestSettingsFilter) Set(val *ContentV2GetCardsListPostRequestSettingsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableContentV2GetCardsListPostRequestSettingsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableContentV2GetCardsListPostRequestSettingsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentV2GetCardsListPostRequestSettingsFilter(val *ContentV2GetCardsListPostRequestSettingsFilter) *NullableContentV2GetCardsListPostRequestSettingsFilter {
	return &NullableContentV2GetCardsListPostRequestSettingsFilter{value: val, isSet: true}
}

func (v NullableContentV2GetCardsListPostRequestSettingsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentV2GetCardsListPostRequestSettingsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
